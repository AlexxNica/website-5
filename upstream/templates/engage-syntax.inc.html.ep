<h2 id="link-code" title="click to expand/collapse this section">Code and Preformatted Text</h2>
<p>Indent four spaces to create an escaped <code>&lt;pre&gt; &lt;code&gt;</code> block:</p>
<pre><span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>printf("%d\n", 42);  /* what was the
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span> question again? */
</pre>
<p>The text will be wrapped in tags, and displayed in a monospaced font. The first four spaces will be stripped off, but all other whitespace will be preserved.</p>
<p>Markdown and HTML are ignored within a code block:</p>
<pre><span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;blink&gt;
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>   You would hate this if it weren't
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span> wrapped in a code block.
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;/blink&gt;
</pre>
<p>Code blocks will automatically be highlighted via highlight.js</p>
<h3>Fenced Code Blocks</h3>
<p>An alternative to indenting you can utilise triple backticks to fence your code blocks.</p>
<pre>```
@requires_authorization
def somefunc(param1='', param2=0):
    r'''A docstring'''
    if param1 > param2: # interesting
        print 'Gre\'ater'
    return (param2 - param1 + 1) or None
```
</pre>
<p>Fenced code blocks will also automatically be highlighted via highlight.js</p>
<p>To force the language selection for highlighting you can specify it immediately after the first fence.</p>
<pre>```python
@requires_authorization
def somefunc(param1='', param2=0):
    r'''A docstring'''
    if param1 > param2: # interesting
        print 'Gre\'ater'
    return (param2 - param1 + 1) or None
```
</pre>

<h3 id="link-code-spans">Code Spans</h3>
<p>Use single backticks to create an inline <code>&lt;code&gt;</code> span:</p>
<pre>The <span class="hi">`</span>$<span class="hi">`</span> character is just a shortcut for <span class="hi">`</span>window.jQuery<span class="hi">`</span>.
</pre>
<p>(The backtick key is in the upper left corner of most keyboards.)</p>
<p>Like code blocks, code spans will be displayed in a monospaced font. Markdown and HTML will not work within them. Note that, <i>unlike</i> code blocks, code spans require you to manually escape any HTML within!</p>
<p>If your code itself contains backticks, you may have to use double backticks as delimiters:</p>
<pre>The name <span class="hi">``</span>Tuple`2<span class="hi">``</span> is a valid .NET type name.
</pre>

<h2 id="link-linebreaks">Linebreaks</h2>
<p> End a line with two spaces to add a <code>&lt;br/&gt;</code> linebreak:</p>
<pre>How do I love thee?<span class="spaces">&nbsp;&nbsp;</span>
Let me count the ways
</pre>

<h2 id="link-italics-bold">Italics and Bold</h2>
<pre><span class="hi">*</span>This is italicized<span class="hi">*</span>, and so is <span class="hi">_</span>this<span class="hi">_</span>.
<span class="hi">**</span>This is bold<span class="hi">**</span>, and so is <span class="hi">__</span>this<span class="hi">__</span>.
Use <span class="hi">***</span> italics and bold together<span class="hi">***</span> if you <span class="hi">___</span>have to<span class="hi">___</span>.
</pre>

<h2 id="link-links" title="click to expand/collapse this section">Links</h2>

<h3 id="link-basic-links">Basic Links</h3>
<p>There are three ways to write links. Each is easier to read than the last:</p>
<pre>Here's an inline link to <span class="hi">[Google](http://www.google.com/)</span>.
Here's a reference-style link to <span class="hi">[Google][1]</span>.
Here's a very readable link to <span class="hi">[Yahoo!][yahoo]</span>.

<span class="hi">[1]:</span> http://www.google.com/
<span class="hi">[yahoo]:</span> http://www.yahoo.com/
</pre>
<p>The link definitions can appear anywhere in the document -- before or after the place where you use them. The link definition names <code>[1]</code> and <code>[yahoo]</code> can be any unique string, and are case-insensitive; <code>[yahoo]</code> is the same as <code>[YAHOO]</code>.</p>

<h3 id="link-advanced-links">Advanced Links</h3>
<p>Links can have a title attribute, which will show up on hover. Title attributes can also be added; they are helpful if the link itself is not descriptive enough to tell users where they're going.</p>
<pre>Here's a <span class="hi">[poorly-named link](http://www.google.com/ "Google")</span>.
Never write "<span class="hi">[click here][^2]</span>".
Visit <span class="hi">[us][web]</span>.

<span class="hi">[^2]:</span> http://www.w3.org/QA/Tips/noClickHere
(Advice against the phrase "click here")
<span class="hi">[web]:</span> http://stackoverflow.com/ "Stack Overflow"
</pre>
<p>You can also use standard HTML hyperlink syntax.</p>
<pre>&lt;a href="http://example.com" title="example"&gt;example&lt;/a&gt;
</pre>

<h2 id="link-bare-urls">Bare URLs</h2>
<p>We do not support "naked" URLs. To force URLs, enclose them in angle brackets:</p>
<pre>Have you seen <span class="hi">&lt;</span>http://example.com<span class="hi">&gt;</span>?
</pre>
<p>URLs can be relative or full.</p>

<h2 id="link-headers">Headers</h2>
<p> Underline text to make the two <code>&lt;h1&gt;</code> <code>&lt;h2&gt;</code> top-level headers :</p>
<pre>Header 1
<span class="hi">========</span>

Header 2
<span class="hi">--------</span>
</pre>
<p>The number of = or - signs doesn't matter; one will work. But using enough to underline the text makes your titles look better in plain text.</p>
<p>Use hash marks for several levels of headers:</p>
<pre><span class="hi">#</span> Header 1 <span class="hi">#</span>
<span class="hi">##</span> Header 2 <span class="hi">##</span>
<span class="hi">###</span> Header 3 <span class="hi">###</span>
</pre>
<p>The closing # characters are optional.</p>
<h2 id="link-horizontal-rules">Horizontal Rules</h2>
<p>Insert a horizontal rule<code>&lt;hr/&gt;</code> by putting three or more hyphens, asterisks, or underscores on a line by themselves:</p>
<pre><span class="hi">---</span>
</pre>
<pre>Rule #1
<span class="hi">---</span>

Rule #2
<span class="hi">*******</span>

Rule #3
<span class="hi">___</span>
</pre>
<p>Using spaces between the characters also works:</p>
<pre>Rule #4   
<span class="hi">- - - -</span>
  </pre>

<h2 id="link-simple-lists">Simple lists</h2>
<p class="col-detail"> A bulleted <code>&lt;ul&gt;</code> list:</p>
<pre class="col-summary"><span class="hi">-</span><span class="spaces">&nbsp;</span>Use a minus sign for a bullet
<span class="hi">+</span><span class="spaces">&nbsp;</span>Or plus sign
<span class="hi">*</span><span class="spaces">&nbsp;</span>Or an asterisk
</pre>
<p class="col-detail"> A numbered <code>&lt;ol&gt;</code> list:</p>
<pre class="col-summary"><span class="hi">1.</span><span class="spaces">&nbsp;</span>Numbered lists are easy
<span class="hi">2.</span><span class="spaces">&nbsp;</span>Markdown keeps track of the numbers for you
<span class="hi">7.</span><span class="spaces">&nbsp;</span>So this will be item 3.
</pre>
<p>A double-spaced list:</p>
<pre><span class="hi">-</span><span class="spaces">&nbsp;</span>This list gets wrapped in &lt;p&gt; tags
<span class="spaces">&nbsp;</span>
<span class="hi">-</span><span class="spaces">&nbsp;</span>So there will be extra space between items
</pre>

<h2 data-title="Advanced lists" id="link-advanced-lists">Advanced lists: Nesting</h2>
<p class="col-detail"> To put other Markdown blocks in a list; just indent four spaces for each nesting level:</p>
<pre class="col-summary only"><span class="hi">1.</span><span class="spaces">&nbsp;</span>Lists in a list item:
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hi">-</span><span class="spaces">&nbsp;</span>Indented four spaces.
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hi">*</span><span class="spaces">&nbsp;</span>indented eight spaces.
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hi">-</span><span class="spaces">&nbsp;</span>Four spaces again.
</pre>

<pre><span class="hi">1.</span><span class="spaces">&nbsp;</span>Lists in a list item:
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hi">-</span><span class="spaces">&nbsp;</span>Indented four spaces.
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hi">*</span><span class="spaces">&nbsp;</span>indented eight spaces.
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hi">-</span><span class="spaces">&nbsp;</span>Four spaces again.
<span class="hi">2.</span><span class="spaces">&nbsp;&nbsp;</span>Multiple paragraphs in a list items:
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>It's best to indent the paragraphs four spaces
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>You can get away with three, but it can get
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>confusing when you nest other things.
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>Stick to four.
<span class="spaces">&nbsp;</span>
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>We indented the first line an extra space to align
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>it with these paragraphs. In real use, we might do
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>that to the entire list so that all items line up.
<span class="spaces">&nbsp;</span>
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span>This paragraph is still part of the list item, but it looks messy to humans. So it's a good idea to wrap your nested paragraphs manually, as we did with the first two.
<span class="spaces">&nbsp;</span>
<span class="hi">3.</span><span class="spaces">&nbsp;</span>Blockquotes in a list item:
<span class="spaces"> </span>
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hi">&gt;</span> Skip a line and
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hi">&gt;</span> indent the &gt;'s four spaces.
<span class="spaces">&nbsp;</span>
<span class="hi">4.</span><span class="spaces">&nbsp;</span>Preformatted text in a list item:
<span class="spaces">&nbsp;</span>
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Skip a line and indent eight spaces.
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>That's four spaces for the list
<span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>and four to trigger the code block.
</pre>

<h2 id="link-simple-blockquotes">Simple blockquotes</h2>
<p>Add a <code>&gt;</code> to the beginning of any line to create a <code>blockquote</code>.</p>
<pre><span class="hi">&gt;</span> The syntax is based on the way email programs
<span class="hi">&gt;</span> usually do quotations. You don't need to hard-wrap
<span class="hi">&gt;</span> the paragraphs in your blockquotes, but it looks much nicer if you do. Depends how lazy you feel.
</pre>

<h2 id="link-advanced-blockquotes" data-title="Advanced blockquotes">Advanced blockquotes: Nesting</h2>
<p class="col-summary only" style="display: none;"> To put other Markdown blocks in a <code>blockquote</code>, just add a <code>&gt;</code> followed by a space.</p>
<p>To put other Markdown blocks in a <code>bq</code>, just add a <code>&gt;</code> followed by a space:</p>
<pre><span class="hi">&gt;</span> The &gt; on the blank lines is optional.
<span class="hi">&gt;</span> Include it or don't; Markdown doesn't care.
<span class="hi">&gt;</span><span class="spaces">&nbsp;</span>
<span class="hi">&gt;</span> But your plain text looks better to
<span class="hi">&gt;</span> humans if you include the extra `&gt;`
<span class="hi">&gt;</span> between paragraphs.
</pre>
<p>Blockquotes within a blockquote:</p>
<pre><span class="hi">&gt;</span> A standard blockquote is indented
<span class="hi">&gt;</span> <span class="hi">&gt;</span> A nested blockquote is indented more
<span class="hi">&gt;</span> <span class="hi">&gt;</span> <span class="hi">&gt;</span> <span class="hi">&gt;</span> You can nest to any depth.
</pre>
<p>Lists in a blockquote:</p>
<pre><span class="hi">&gt;</span><span class="spaces">&nbsp;</span><span class="hi">-</span> A list in a blockquote
<span class="hi">&gt;</span><span class="spaces">&nbsp;</span><span class="hi">-</span> With a &amp;gt; and space in front of it
<span class="hi">&gt;</span><span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="hi">*</span> A sublist
</pre>
<p>Preformatted text in a blockquote:</p>
<pre><span class="hi">&gt;</span><span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Indent five spaces total. The first
<span class="hi">&gt;</span><span class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>one is part of the blockquote designator.
</pre>

<h2 id="link-images">Images</h2>
<p>Images are exactly like links, but they have an exclamation point in front of them:</p>
<pre>![Valid XHTML](http://w3.org/Icons/valid-xhtml10).
</pre>
<p>The word in square brackets is the alt text, which gets displayed if the browser can't show the image. Be sure to include meaningful alt text for screen-reading software.</p>
<p>Just like links, images work with reference syntax and titles:</p>
<pre>This page is <span class="hi">![valid XHTML][checkmark]</span>.

<span class="hi">[checkmark]:</span> http://w3.org/Icons/valid-xhtml10
 "What are you smiling at?"
</pre>
<p>Note: Markdown does not currently support the shortest reference syntax for images:</p>
<pre>Here's a broken ![checkmark].
</pre>
<p>But you can use a slightly more verbose version of implicit reference names:</p>
<pre>This <span class="hi">![checkmark][]</span> works.
</pre>
<p>The reference name is also used as the alt text.</p>
<p>You can also use standard HTML image syntax, which allows you to scale the width and height of the image.</p>
<pre>&lt;img src="http://example.com/sample.png" width="100" height="100"&gt;
</pre>
<p>URLs can be relative or full.</p>

<h2 id="link-html">Inline HTML</h2>
<p>If you need to do something that Markdown can't handle, use HTML. Note that <a href="http://meta.stackoverflow.com/questions/1777/what-html-tags-are-allowed">we only support a very strict subset of HTML!</a></p>
<pre>To reboot your computer, press <span class="hi">&lt;kbd&gt;</span>ctrl<span class="hi">&lt;/kbd&gt;</span>+&lt;kbd&gt;alt&lt;/kbd&gt;+&lt;kbd&gt;del&lt;/kbd&gt;.
</pre>
<p>Markdown is smart enough not to mangle your span-level HTML:</p>
<pre><span class="hi">&lt;b&gt;</span>Markdown works <span class="hi">*</span>fine<span class="hi">*</span> in here.<span class="hi">&lt;/b&gt;</span>
</pre>
<p>Block-level HTML elements have a few restrictions:</p>
<ol>
  <li>They must be separated from surrounding text by blank lines.</li>
  <li>The begin and end tags of the outermost block element must not be indented.</li>
  <li>Markdown can't be used within HTML blocks.</li>
</ol>
<pre><span class="hi">&lt;pre&gt;</span>
You can <span class="hi">&lt;em&gt;</span>not<span class="hi">&lt;/em&gt;</span> use Markdown in here.
<span class="hi">&lt;/pre&gt;</span>
</pre>
